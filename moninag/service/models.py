from django.db import models

from server.models import Server


SERVICE_STATUS_CHOICES = (
    ('', 'Unknown'),
    ('fail', 'Fail'),
    ('ok', 'OK'),
)


class Service(models.Model):
    """Service model class.

    Attributes:
        id (int): autogenerated primary key.
        name (str): service name.
        status (str): service status.
        server (int): foreign key to server which owns service (many-to-one).
    """

    name = models.CharField(default='', max_length=200)
    status = models.CharField(default='', choices=SERVICE_STATUS_CHOICES, max_length=10)
    server = models.ForeignKey(Server, on_delete=models.CASCADE)

    @classmethod
    def get(cls, statuses=None, server_id=None, start=0, end=20):
        """Get services.

        Statuses and server are used used as filters,
        otherwise the given count of services are returned starting from start index.

        Args:
            statuses(list, optional): service statuses. Defaults to None.
            server_id(int, optional): server id. Defaults to None.
            start(int, optional): start position when getting all services. Defaults to 0.
            end(int, optional): end position when getting all services. Defaults to 20.

        Returns:
            QuerySet<Service>: QuerySet of services.
        """

        filters = {}

        if statuses:
            filters['status__in'] = statuses

        if server_id:
            filters['server__id'] = server_id

        if filters:
            services = cls.objects.filter(**filters)
        else:
            services = cls.objects.all()[start:end]

        return services

    def __str__(self):
        return 'Service id: {}, name: {}, status: {}'.format(self.id,
                                                             self.name,
                                                             self.status)
