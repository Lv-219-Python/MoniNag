# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-16 15:28
from __future__ import unicode_literals

from django.db import migrations


PLUGINS = [
    {
        'name': 'check_dns',
        'description': 'This plugin uses the nslookup program to obtain the IP address for '
                       'the given host/domain query. An optional DNS server '
                       'to use may be specified. If no DNS server is specified, '
                       'the default server(s) '
                       'specified in /etc/resolv.conf will be used.',
    },
    {
        'name': 'check_ftp',
        'description': 'This plugin tests FTP connections with the specified '
                       'host (or unix socket).',
    },
    {
        'name': 'check_http',
        'description': 'This plugin tests the HTTP service on the specified host. '
                       'It can test normal (http) and secure (https) servers, '
                       'follow redirects, search for strings and regular expressions, '
                       'check connection times, and report on certificate expiration times.',
    },
    {
        'name': 'check_ping',
        'description': 'Use ping to check connection statistics for a remote host.',
    },
    {
        'name': 'check_smtp',
        'description': 'This plugin will attempt to open an SMTP connection with the host.',
    },
    {
        'name': 'check_tcp',
        'description': 'This plugin tests TCP connections with the specified host (or unix socket).',
    },
    {
        'name': 'check_time',
        'description': 'This plugin will check the time on the specified host.',
    },
]


def update_plugins(apps, schema_editor):
    """Add chosen plugin names into database."""

    NagPlugin = apps.get_model('nagplugin', 'NagPlugin')

    for plugin_info in PLUGINS:
        try:
            plugin = NagPlugin.objects.get(name=plugin_info['name'])
            plugin.description = plugin_info['description']
            plugin.save()
        except NagPlugin.DoesNotExist:
            pass

class Migration(migrations.Migration):

    dependencies = [
        ('nagplugin', '0003_nagplugin_description'),
    ]

    operations = [
        migrations.RunPython(update_plugins),
    ]
